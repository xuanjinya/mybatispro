<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--
    mapper 用于定义一个映射配置文件的根节点
    namespace 属性是用来配置命名空间，主要进行session级别的缓存管理
    命名空间默认情况下使用当前我们操作的实体类的全路径
-->
<mapper namespace="cn.huang.entity.Users">
    <!--常规的情况下，我们的cn.huang.entity.Users和数据中的表是形成对应的关系的，就是User的属性和数据库中的属性名称是保持一致性的-->
    <!--    <select id="findUser" resultType="cn.huang.entity.Users">-->
    <select id="findUser" resultMap="forUsers">
        select * from users
        /*动态语句的添加*/
        <if test="id != null">
            where id = #{id}
        </if>
    </select>
    <!--当出现不一致的情况，就不能查询到相关的数据，这时候可以使用resultMap(自定义映射关系)来进行配置了-->
    <!--自定义映射关系 集合：主要包含对于一些自定义操作的配置，如不一致的属性和字段-->
    <resultMap id="forUsers" type="cn.huang.entity.Users">
        <!--主键不一致的时候可以使用这个配置
        <id column="" property=""></id>-->
        <!--如：数据库中的username,实体类User的name
                column:数据库中的属性名  property：实体类中的属性名称
        -->
        <result column="username" property="name"></result>
    </resultMap>
    <!--   当出现多个条件的时候，就会要写多个sql语句，这样的代码是不简洁的，这时候可以使用mybatis的动态sql语句
        <select id="findById" resultType="cn.huang.entity.Users">
            select * from users where id = #{id}
        </select>-->

    <!--添加数据到数据库-->
    <insert id="adduser"  useGeneratedKeys="true" keyProperty="id" parameterType="cn.huang.entity.Users">
        insert into users (username,userpass,nickname,age,gender,email,phone,createTime,updateTime,lastLogin,userStatus,remark)
         values (#{name},#{userpass},#{nickname},#{age},#{gender},#{email},#{phone},#{createTime},#{updateTime},#{lastLogin},#{userStatus},#{remark})
    </insert>
</mapper>
